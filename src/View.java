/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mrjaffesclass.apcs.mvc.template;

import com.mrjaffesclass.apcs.messenger.*;
import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import javax.swing.JPanel;
/**
 * MVC Template
 * This is a template of an MVC framework used by APCS for the 
 * LandMine project (and others)
 * @author Roger Jaffe
 * @version 1.0
 * 
 */
public class View extends javax.swing.JFrame implements MessageHandler {

  private final Messenger mvcMessaging;
  
  /**
   * Creates a new view
   * @param messages mvcMessaging object
   */
  public View(Messenger messages) {
    mvcMessaging = messages;   // Save the calling controller instance
    initComponents();           // Create and init the GUI components
  }
  
  /**
   * Initialize the model here and subscribe
   * to any required messages
   */
  public void init() {
    // Subscribe to messages here
    this.mvcMessaging.subscribe("model:newTurn", this);
    this.mvcMessaging.subscribe("model:turnSkip", this);
    this.mvcMessaging.subscribe("model:gameOver", this);
  }
  
  @Override
  public void messageHandler(String messageName, Object messagePayload) {
    if (messagePayload != null) {
      System.out.println("MSG: received by view: "+messageName+" | "+messagePayload.toString());
    } else {
      System.out.println("MSG: received by view: "+messageName+" | No data sent");
    }
    if (messageName.equals("model:newTurn")) {
        BoardInfo info = (BoardInfo) messagePayload;
        if (info.getTurn()) {
            jLabel1.setText("Black's Turn");
        } else {
            jLabel1.setText("White's Turn");
        }
        jLabel3.setText("<html>Black has: " + info.getBlackCount() + "<br/>White has: <html>" + info.getWhiteCount());
    }
    if (messageName.equals("model:turnSkip")) {
        BoardInfo info = (BoardInfo) messagePayload;
        if (info.getTurn()) {
            jLabel1.setText("No moves for Black. Skipping...");
        } else {
            jLabel1.setText("No moves for White. Skipping...");
        }
        jLabel3.setText("<html>Black has: " + info.getBlackCount() + "<br/>White has: <html>" + info.getWhiteCount());
        // html and br/ text are used for line breaks for the jlabel text
    }
    if (messageName.equals("model:gameOver")) {
        BoardInfo info = (BoardInfo) messagePayload;
        jLabel1.setText("Game Over: " + info.getStatus());
        jLabel3.setText("<html>Black has: " + info.getBlackCount() + "<br/>White has: <html>" + info.getWhiteCount());

    }
  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new DrawPanel(mvcMessaging);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClick(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 48, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Black's Turn");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 461, 400, 41));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Othello");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 0, 376, 41));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("<html>Black has: 0<br/>White has: 0<html>");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 400, 54));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onClick
        // we can use integer division to translate mouse click positions to indexes because integer division floors the result. ex: 346 / 50 = 6
        // we divide by 50 because each square is 50 by 50, so if i clicked at an x position of 346, it would translate to a column index of 6 in the board array
        int xPos = evt.getX() / 50; 
        int yPos = evt.getY() / 50;
        Position pos = new Position(xPos, yPos);
        this.mvcMessaging.notify("view:boardChange", pos);
    }//GEN-LAST:event_onClick


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
